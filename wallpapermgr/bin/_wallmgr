#compdef wallmgr                                                                    
########################################################################################### 
# Name :          _wallmgr                                                          
# Created :       Sep 05 2016                                                                
# Generated By:   supercli.autocomplete.py                                                  
#_________________________________________________________________________________________  
# Description :   ZSH autocompletion script for CLI command: "wallmgr".             
#                                                                                           
#                 To enabe autocompletion in zsh, add the following lines                   
#                 to your ~/.zshrc file:                                                    
#                                                                                           
#                      autoload -U compinit                                                 
#                      compinit                                                             
#                                                                                           
#                 To use this script, copy it to a location on your $fpath                  
#                 then open a new terminal or ZSH process.                                  
#                 (ex: /usr/share/zsh/functions/Completion/Unix/ )                          
#_________________________________________________________________________________________  
########################################################################################### 
                                                                                            
_wallmgr() {                         
    local context state line expl implementation 
    local -a subcmds                             
                                                 
                                                 
    subcmds=( pull push archive data prev display shuffle next ) 

    _arguments -C                              \
        {-h,--help}'[show help information]'   \
        '1:subcommand:compadd -a subcmds'      \
        '*:: :->subcmd' && return                
                                                 
    service="$words[1]"                        
    curcontext="${curcontext%:*}-$service:"    
                                                 
    case $service in                             
    (pull)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            ;;
    (push)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            ;;
    (archive)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            {-an,--archive_name}'[Manually set the archive to display wallpapers from]'\
            {-a,--append}'[Add wallpapers to an archive. If archive doesn\\''t exist, it is created]'\
            '--push[If gitroot/gitsource are defined in config, push any changes to gitroot to the repo]'\
            '--pull[If gitroot/gitsource are defined in config, pull changes to gitroot to the repo (cloning if necessary)]'\
            ;;
    (data)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            {-s,--shuffle-order}'[Re-Randomize the order of wallpapers]'\
            '--recreate-datafile[Deletes and recreates json file containing programdata (archive-paths, sequence-order, ...)]'\
            ;;
    (prev)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            ;;
    (display)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            {-an,--archive_name}'[Manually set the archive to display wallpapers from]'\
            {-n,--next}'[Display next wallpaper in sequence (looping if necessary)]'\
            {-p,--prev}'[Display previous wallpaper in sequence (looping if necessary)]'\
            {-o,--offset}'[Display wallpaper that is N images away in the sequence (ex: 10/-10) (looping if necessary)]'\
            {-i,--index}'[Index of wallpaper that you want to display]'\
            {-d,--daemonize}'[Run in the background, and change wallpapers every N seconds. (Defaults to 120s)]'\
            ;;
    (shuffle)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            ;;
    (next)                             
        _arguments -A "-*"                \
            {-h,--help}'[show this help message and exit]'\
            {-v,--verbose}'[Prints more detailed log-information ([31m`logging.DEBUG`[39;49;00m)]'\
            {-vv,--very-verbose}'[Same as verbose, but all log-filters are disabled.  (All information is printed)]'\
            ;;
    (*)
        _message "unknown sub-command: $service" 
        ;;                                       
    esac                                         
}                                                
                                                 
_wallmgr "$@"                            
